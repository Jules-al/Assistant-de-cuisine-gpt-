import streamlit as st
import os
import sys
from openai import OpenAI

# Ajouter le r√©pertoire parent au chemin Python
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
import config

# Initialiser le client OpenAI
client = OpenAI(api_key=config.OPENAI_API_KEY)

# Liste des questions pr√©d√©finies
QUESTIONS = [
    "Comment pr√©parer une ratatouille ?",
    "Quelle est la diff√©rence entre une quiche et une tarte ?",
    "Comment faire une cr√®me br√ªl√©e ?",
    "Qu'est-ce que le cassoulet ?",
    "Comment faire une tarte Tatin ?",
    "Qu'est-ce que la bouillabaisse ?",
    "Comment faire un coq au vin ?",
    "Qu'est-ce que le gratin dauphinois ?",
    "Comment faire une mousse au chocolat ?",
    "Qu'est-ce que le pot-au-feu ?"
]

def get_model_response(prompt, model_id):
    """Obtient une r√©ponse du mod√®le fine-tun√©."""
    try:
        response = client.chat.completions.create(
            model=model_id,
            messages=[
                {"role": "system", "content": "Vous √™tes un assistant sp√©cialis√© en cuisine fran√ßaise."},
                {"role": "user", "content": prompt}
            ]
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"Erreur lors de l'appel au mod√®le: {str(e)}"

def main():
    st.title("üç≥ Assistant Cuisine Fran√ßaise")
    st.write("Posez vos questions sur la cuisine fran√ßaise !")

    # Champ pour l'ID du mod√®le
    model_id = st.text_input("Entrez l'ID du mod√®le fine-tun√© :")

    # S√©lection de la question
    selected_question = st.selectbox(
        "Choisissez une question :",
        QUESTIONS
    )

    # Champ pour une question personnalis√©e
    custom_question = st.text_input("Ou posez votre propre question :")

    # Bouton pour obtenir la r√©ponse
    if st.button("Obtenir la r√©ponse"):
        if not model_id:
            st.error("Veuillez entrer l'ID du mod√®le fine-tun√©")
            return

        # Utiliser la question personnalis√©e si elle existe, sinon utiliser la question s√©lectionn√©e
        question = custom_question if custom_question else selected_question
        
        with st.spinner("Le mod√®le r√©fl√©chit..."):
            response = get_model_response(question, model_id)
            
            # Afficher la r√©ponse dans un conteneur stylis√©
            st.markdown("### R√©ponse :")
            st.markdown(response)

if __name__ == "__main__":
    main() 